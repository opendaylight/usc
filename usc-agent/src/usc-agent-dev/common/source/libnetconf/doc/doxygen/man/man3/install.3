.TH "install" 3 "Tue Mar 3 2015" "Version 0.9.0-48_trunk" "libnetconf" \" -*- nroff -*-
.ad l
.nh
.SH NAME
install \- Compilation and Installation 
.SH "Cloning git repository"
.PP
As written on libnetconf's [Google Code page](https://code.google.com/p/libnetconf/source/checkout), the repository can be cloned using the following command:
.PP
~~~~~~~ $ git clone https://code.google.com/p/libnetconf/ ~~~~~~~
.PP
\fBNote:\fP
.RS 4
In case that git fails to clone the repository make sure your git is at least version 1\&.6\&.6\&.
.RE
.PP
.SH "Requirements"
.PP
Before compiling the source code make sure that your system provides the following libraries or applications\&. Some of them are optional or can be avoided in cost of missing of some feature - see the notes for the specific item\&. All requirements are checked by the `configure` script\&.
.PP
.IP "\(bu" 2
compiler (_gcc_, _clang_, \&.\&.\&.) and standard headers
.IP "\(bu" 2
_pkg-config_
.IP "\(bu" 2
_libpthreads_
.IP "\(bu" 2
_libxml2_ (including headers from the devel package)
.IP "\(bu" 2
_libxslt_ (including headers from the devel package)
.IP "\(bu" 2
_libssh2_ (including headers from the devel package)
.IP "  \(bu" 4
can be omitted by `--disable-libssh2` option, but in that case a standalone SSH client (usually from the openSSH) is required\&. For more details, see \fB--disable-libssh2\fP description\&.
.PP

.IP "\(bu" 2
_libcurl_ (including headers from the devel package)
.IP "  \(bu" 4
can be omitted by `--disable-url` option, but in that case the NETCONF :url capability is disabled\&.
.PP

.IP "\(bu" 2
_libopenssl_ (including headers from the devel package)
.IP "  \(bu" 4
required only when the TLS transport is enabled by `--enable-tls` option\&. More information about the TLS transport can be found in \fBTransport Protocol\fP section\&.
.PP

.IP "\(bu" 2
_doxygen_
.IP "  \(bu" 4
optional, required to (re)build documentation (`make doc`)
.PP

.IP "\(bu" 2
_rpmbuild_
.IP "  \(bu" 4
optional, required to build RPM package (`make rpm`)
.PP

.PP
.SH "Compilation"
.PP
libnetconf uses standard GNU Autotools toolchain\&. To compile and install libnetconf you have to go through the following three steps:
.PP
~~~~~~~~~~~~~~ $ \&./configure $ make # make install ~~~~~~~~~~~~~~
.PP
This way the library will be installed in `/usr/local/lib/` (or lib64) and `/usr/local/include/` respectively\&.
.SS "Configure Options"
`configure` script supports the following options\&. The full list of the accepted options can be shown by `--help` option\&.
.PP
.IP "\(bu" 2
`--disable--libssh2` 
.IP "  \(bu" 4
Remove dependency on the `libssh2` library\&. By default, the `libssh2` library is used by the client side functions to create SSH connection to a remote host\&. If the usage of the `libssh2` is disabled, libnetconf will use a standalone `ssh(1)` client located in a system path\&. `ssh(1)` client is, for example, part of the OpenSSH\&. This option has no effect for server-side functionality\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--disable-notifications`
.IP "  \(bu" 4
Remove support for the NETCONF Notifications\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--disable-url`
.IP "  \(bu" 4
Remove support for NETCONF :url capability\&. cURL dependency is also removed\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--disable-validation`
.IP "  \(bu" 4
Remove support for NETCONF :validate capability\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--disable-yang-schemas`
.IP "  \(bu" 4
Remove support for YANG data model format for <get-schema> opration\&. With this option, only YIN format is available\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--enable-debug`
.IP "  \(bu" 4
Add debugging information for a debugger\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--enable-tls`
.IP "  \(bu" 4
Enable experimental support for TLS transport\&. More information about the TLS transport can be found in \fBTransport Protocol\fP section\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--with-pyapi[=path_to_python3]`
.IP "  \(bu" 4
Build also the libnetconf Python API\&. This requires python3, so if it is installed in some non-standard location, specify the complete path to the binary\&. For more information about Python API, see a separated doxygen documentation accessible from the project main page\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--with-nacm-recovery-uid=<uid>` 
.IP "  \(bu" 4
Specify user ID to be used for the identification of the \fBNACM Recovery Session\fP\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--with-workingdir=<path>`
.IP "  \(bu" 4
Change location of libnetconf's working directory\&. Default path is `/var/lib/libnetconf/`\&. Note that applications using libnetconf should have permissions to read/write to this path, with `--with-suid` and `--with-sgid` this is set automatically\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--with-suid=<user>`
.IP "  \(bu" 4
Limit usage of libnetconf to the specific _user_\&. With this option, libnetconf creates shared files and other resources with access rights limited to the specified _user_\&. This option can be freely combined with the `--with-sgid` option\&. If neither `--with-suid` nor `--with-sgid` option is specified, full access rights for all users are granted\&.
.PP

.PP
.PP
.IP "\(bu" 2
`--with-sgid=<group>`
.IP "  \(bu" 4
Limit usage of libnetconf to the specific _group_\&. With this option, libnetconf creates shared files and other resources with access rights limited to the specified _group_\&. This option can be freely combined with the `--with-suid` option\&. If neither `--with-suid` nor `--with-sgid` option is specified, full access rights for all users are granted\&.
.PP

.PP
.PP
\fBNote:\fP
.RS 4
If the library is built with `--with-suid` or `--with-sgid` options, the proper suid or/and sgid bit should be set to the server-side application binaries that use the libnetconf library\&. 
.RE
.PP

