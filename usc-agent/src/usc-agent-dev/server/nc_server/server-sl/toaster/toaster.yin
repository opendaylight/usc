<?xml version="1.0" encoding="UTF-8"?>
<module name="toaster"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:toast="http://netconfcentral.org/ns/toaster">
  <namespace uri="http://netconfcentral.org/ns/toaster"/>
  <prefix value="toast"/>
  <organization>
    <text>Netconf Central</text>
  </organization>
  <contact>
    <text>Andy Bierman &lt;andy@netconfcentral.org&gt;</text>
  </contact>
  <description>
    <text>YANG version of the TOASTER-MIB.</text>
  </description>
  <revision date="2009-11-20">
    <description>
      <text>Toaster module in progress.</text>
    </description>
  </revision>
  <identity name="toast-type">
    <description>
      <text>Base for all bread types supported by the toaster.
New bread types not listed here nay be added in the 
future.</text>
    </description>
  </identity>
  <identity name="white-bread">
    <description>
      <text>White bread.</text>
    </description>
    <base name="toast:toast-type"/>
  </identity>
  <identity name="wheat-bread">
    <description>
      <text>Wheat bread.</text>
    </description>
    <base name="toast-type"/>
  </identity>
  <identity name="wonder-bread">
    <description>
      <text>Wonder bread.</text>
    </description>
    <base name="toast-type"/>
  </identity>
  <identity name="frozen-waffle">
    <description>
      <text>Frozen waffle.</text>
    </description>
    <base name="toast-type"/>
  </identity>
  <identity name="frozen-bagel">
    <description>
      <text>Frozen bagel.</text>
    </description>
    <base name="toast-type"/>
  </identity>
  <identity name="hash-brown">
    <description>
      <text>Hash browned potatos.</text>
    </description>
    <base name="toast-type"/>
  </identity>
  <typedef name="DisplayString">
    <description>
      <text>YANG version of the SMIv2 DisplayString TEXTUAL-CONVENTION.</text>
    </description>
    <reference>
      <text>RFC 2579, section 2.</text>
    </reference>
    <type name="string">
      <length value="0 .. 255"/>
    </type>
  </typedef>
  <container name="toaster">
    <presence value="Indicates the toaster service is available"/>
    <description>
      <text>Top-level container for all toaster database objects.</text>
    </description>
    <leaf name="toasterManufacturer">
      <type name="DisplayString"/>
      <config value="false"/>
      <mandatory value="true"/>
      <description>
        <text>The name of the toaster's manufacturer. For instance, 
 Microsoft Toaster.</text>
      </description>
    </leaf>
    <leaf name="toasterModelNumber">
      <type name="DisplayString"/>
      <config value="false"/>
      <mandatory value="true"/>
      <description>
        <text>The name of the toaster's model. For instance,
Radiant Automatic.</text>
      </description>
    </leaf>
    <leaf name="toasterStatus">
      <type name="enumeration">
        <enum name="up">
          <value value="1"/>
          <description>
            <text>The toaster knob position is up.
 No toast is being made now.</text>
          </description>
        </enum>
        <enum name="down">
          <value value="2"/>
          <description>
            <text>The toaster knob position is down.
 Toast is being made now.</text>
          </description>
        </enum>
      </type>
      <config value="false"/>
      <mandatory value="true"/>
      <description>
        <text>This variable indicates the current state of 
the toaster.</text>
      </description>
    </leaf>
  </container>
  <rpc name="make-toast">
    <description>
      <text>Make some toast.
The toastDone notification will be sent when 
the toast is finished.
An 'in-use' error will be returned if toast
is already being made.
A 'resource-denied' error will be returned 
if the toaster service is disabled.</text>
    </description>
    <input>
      <leaf name="toasterDoneness">
        <type name="uint32">
          <range value="1 .. 10"/>
        </type>
        <default value="5"/>
        <description>
          <text>This variable controls how well-done is the 
ensuing toast. It should be on a scale of 1 to 10.
Toast made at 10 generally is considered unfit 
for human consumption; toast made at 1 is warmed 
lightly.</text>
        </description>
      </leaf>
      <leaf name="toasterToastType">
        <type name="identityref">
          <base name="toast:toast-type"/>
        </type>
        <default value="toast:wheat-bread"/>
        <description>
          <text>This variable informs the toaster of the type of 
material that is being toasted. The toaster 
uses this information, combined with 
toasterDoneness, to compute for how 
long the material must be toasted to achieve 
the required doneness.</text>
        </description>
      </leaf>
    </input>
  </rpc>
  <rpc name="cancel-toast">
    <description>
      <text>Stop making toast, if any is being made.
A 'resource-denied' error will be returned 
if the toaster service is disabled.</text>
    </description>
  </rpc>
  <notification name="toastDone">
    <description>
      <text>Indicates that the toast in progress has completed.</text>
    </description>
    <leaf name="toastStatus">
      <description>
        <text>Indicates the final toast status</text>
      </description>
      <type name="enumeration">
        <enum name="done">
          <description>
            <text>The toast is done.</text>
          </description>
        </enum>
        <enum name="cancelled">
          <description>
            <text>The toast was cancelled.</text>
          </description>
        </enum>
        <enum name="error">
          <description>
            <text>The toaster service was disabled or
the toaster is broken.</text>
          </description>
        </enum>
      </type>
    </leaf>
  </notification>
</module>
