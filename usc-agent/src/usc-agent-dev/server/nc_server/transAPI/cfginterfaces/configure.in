AC_PREREQ([2.63])
AC_INIT([cfginterfaces], [1.0])
AC_CONFIG_SRCDIR([cfginterfaces.c.in])

PROJECTNAME=cfginterfaces
AC_SUBST(PROJECTNAME)

# --enable-debug option
AC_ARG_ENABLE([debug],
	AC_HELP_STRING([--enable-debug],[Compile with debug options]),
	CFLAGS="$CFLAGS -g -DDEBUG",
	CFLAGS="$CFLAGS -O3"
)

AC_ARG_WITH([netopeer-confdir],
	[AC_HELP_STRING([--with-netopeer-confdir=DIR], [Netopeer server configuration directory (by default ${sysconfdir}/netopeer/)])],
	[NETOPEER_DIR="$withval"],
	[NETOPEER_DIR="${sysconfdir}/netopeer/"]
)
AC_SUBST(NETOPEER_DIR)

# --with-libxml2=path-to-libxml2-git-repository
AC_ARG_WITH([libxml2],
[AC_HELP_STRING([--with-libxml2], [specific libxml2 location])],
[
	AC_CHECK_PROG([XML2_CONFIG], [xml2-config], [yes], [no], [$withval])
	if test "$XML2_CONFIG" = "no"; then
		AC_MSG_ERROR([Missing development package of libxml2.])
	fi
	CFLAGS="`$withval/xml2-config --cflags` $CFLAGS"
	LDFLAGS="`$withval/xml2-config --libs` $LDFLAGS"
	WITH_LIBXML2="$withval"
]
)

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_CHECK_PROG([IP], [ip], [yes], [no])
if test "$IP" = "no"; then
	AC_MSG_ERROR([Missing the ip utility.])
fi

AC_CHECK_PROG([DHCPCD], [dhcpcd], [yes], [no])
if test "$DHCPCD" = "no"; then
	AC_CHECK_PROG([DHCLIENT], [dhclient], [yes], [no])
	if test "$DHCLIENT" = "no"; then
		AC_MSG_ERROR([Missing the dhcpcd daemon.])
	else
		DHCP_CLIENT_RENEW="dhclient"
		DHCP_CLIENT_RELEASE="dhclient -r"
	fi
else
	DHCP_CLIENT_RENEW="dhcpcd --renew"
	DHCP_CLIENT_RELEASE="dhcpcd --release"
fi
AC_SUBST(DHCP_CLIENT_RENEW)
AC_SUBST(DHCP_CLIENT_RELEASE)

AC_CHECK_PROG([AVAHI_DAEMON], [avahi-daemon], [yes], [no])
if test "$AVAHI_DAEMON" = "yes"; then
	AVAHI_DAEMON=AVAHI_DAEMON
else
	AVAHI_DAEMON=NO_AVAHI_DAEMON
fi
AC_SUBST(AVAHI_DAEMON)

AC_CHECK_PROG([AVAHI_AUTOIPD], [avahi-autoipd], [yes], [no])
if test "$AVAHI_AUTOIPD" = "yes"; then
	AVAHI_AUTOIPD=AVAHI_AUTOIPD
else
	AVAHI_AUTOIPD=NO_AVAHI_AUTOIPD
fi
AC_SUBST(AVAHI_AUTOIPD)

# Check distribution
AC_CHECK_FILE(/etc/redhat-release,[DISTRO=REDHAT],[DISTRO=unknown])
if test "$DISTRO" = "unknown"; then
	AC_CHECK_FILE(/etc/SuSE-release,[DISTRO=SUSE],[])
fi
if test "$DISTRO" = "unknown"; then
	AC_CHECK_FILE(/etc/debian_version,[DISTRO=DEBIAN],[])
fi
if test "$DISTRO" = "unknown"; then
	DISTRO=REDHAT
	AC_MSG_WARN([Failed to detect the Linux distribution, assuming RedHat base!])
fi

SYSCTL_CONF="/etc/sysctl.conf"
if test "$DISTRO" = "REDHAT"; then
	IFCFG_FILES="/etc/sysconfig/network-scripts"
	IFCFG_SCRIPTS="/sbin/ifup-local"
elif test "$DISTRO" = "SUSE"; then
	IFCFG_FILES="/etc/sysconfig/network"
	IFCFG_SCRIPTS="/etc/sysconfig/network/scripts"
elif test "$DISTRO" = "DEBIAN"; then
	IFCFG_FILES="/etc/network/interfaces"
	IFCFG_SCRIPTS=""
	CFLAGS="$CFLAGS -Wno-unused-result"
else
	AC_MSG_ERROR([Distribution detection error!])
fi
AC_SUBST(DISTRO)
AC_SUBST(IFCFG_FILES)
AC_SUBST(IFCFG_SCRIPTS)
AC_SUBST(SYSCTL_CONF)

# Use libtool
AC_PROG_LIBTOOL
# Always use ./libtool unless overridden from command-line
if test -z "$libtool"; then
	libtool='./libtool'
fi
AC_SUBST(libtool)

AC_PATH_PROG(NETOPEER_MANAGER, [netopeer-manager], [])
AC_SUBST(NETOPEER_MANAGER)

# Checks for libraries.
export PKG_CONFIG_PATH=/usr/local/${libdir##*/}/pkgconfig:$PKG_CONFIG_PATH

PKG_CHECK_MODULES(LIBNETCONF, libnetconf)
AC_SEARCH_LIBS([ncds_apply_rpc], [netconf], ,AC_MSG_ERROR([libnetconf not found!]))
LIBNETCONF_DATADIR="`$PKG_CONFIG --variable=datadir libnetconf`"
AC_SUBST(LIBNETCONF_DATADIR)

# Check for libxml2.
if test -z "$WITH_LIBXML2" ; then
	AC_CHECK_PROG([XML2_CONFIG], [xml2-config], [yes], [no])
	if test "$XML2_CONFIG" = "no"; then
		AC_MSG_ERROR([Missing development package of libxml2.])
	fi
	AC_CHECK_LIB([xml2], [main], [LIBS="`xml2-config --libs` $LIBS" CFLAGS="`xml2-config --cflags` $CFLAGS"], AC_MSG_ERROR([Libxml2 not found ]))
fi

# Checks for header files.
AC_CHECK_HEADERS([stdlib.h libnetconf.h])

# Checks for typedefs, structures, and compiler characteristics.
#AC_TYPE_UINT32_T

# Checks for library functions.
#AC_CHECK_FUNCS([strdup])

# Set monitoring callback for all the network devices.
COUNT=1
CB_CODE="{.path = \"${SYSCTL_CONF}\", .func = cfginterfaces_file_change_cb},"
if test "$DISTRO" = "DEBIAN"; then
	COUNT=$((COUNT + 1))
	CB_CODE="${CB_CODE}
		{.path = \"${IFCFG_FILES}\", .func = cfginterfaces_file_change_cb}"
else
	for dev in `ls /sys/class/net`; do
		COUNT=$((COUNT + 1))
		CB_CODE="${CB_CODE}
		{.path = \"${IFCFG_FILES}/ifcfg-${dev}\", .func = cfginterfaces_file_change_cb},"
	done
fi
AC_SUBST(COUNT)
AC_SUBST(CB_CODE)

AC_CONFIG_FILES([Makefile config.h cfginterfaces.c model/ietf-interfaces-data.rng])
AC_OUTPUT
if test "$DISTRO" = "DEBIAN"; then
	AC_MSG_NOTICE([])
	AC_MSG_NOTICE([	NOTE: If the network-manager service is running, it may])
	AC_MSG_NOTICE([	interfere with this module interface configuration.])
	AC_MSG_NOTICE([	For more details, check the README file.])
	AC_MSG_NOTICE([])
else
	service NetworkManager status | grep running &>/dev/null
	if test "$?" = 0; then
		AC_MSG_NOTICE([])
		AC_MSG_NOTICE([	WARNING: NetworkManager is running, it may interfere with interface])
		AC_MSG_NOTICE([	configuration and the configuration will not be applied after restart!])
		AC_MSG_NOTICE([	For more details, check the README file.])
		AC_MSG_NOTICE([])
	fi
fi
