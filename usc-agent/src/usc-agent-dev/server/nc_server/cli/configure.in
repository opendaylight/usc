#
# Copyright (c) 2011-2013 CESNET
#
# LICENSE TERMS
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# ALTERNATIVELY, provided that this notice is retained in full, this
# product may be distributed under the terms of the GNU General Public
# License (GPL) version 2 or later, in which case the provisions
# of the GPL apply INSTEAD OF those given above.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id$
#

# Process this file with autoconf to produce a configure script.
AC_INIT([netopeer-cli], m4_esyscmd([cut -f1 ./VERSION | tr -d '\n']))

m4_include([m4/ax_pthread.m4])

AC_CANONICAL_HOST

PACKAGE_VERSION=`cut -f1 ./VERSION | tr -d '\n'`
AC_SUBST(PACKAGE_VERSION)

RELEASE=1
AC_SUBST(RELEASE)

if test "`git show > /dev/null 2>&1;echo $?`" = "0"; then
        CPPFLAGS="$CPPFLAGS -DRCSID=\\\"\$(IDGIT)\\\""
else
        CPPFLAGS="$CPPFLAGS -DRCSID=\\\"\$(IDNOGIT)\\\""
fi

# builder information for RPM
USERNAME=`git config --get user.name`
USERMAIL=`git config --get user.email`
AC_SUBST(USERNAME)
AC_SUBST(USERMAIL)

# parameter used when rerunning configure building RPM
CONFIGURE_PARAMS=""

# Check for pkg-config.
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
	AC_MSG_ERROR(['pkgconfig' not found.])
fi

# expand libdir
expanded_libdir=`(
	case $prefix in
		NONE) prefix=$ac_default_prefix ;;
		*) ;;
	esac
	case $exec_prefix in
		NONE) exec_prefix=$prefix ;;
		*) ;;
	esac
	eval echo $libdir
)`

# check for Linux distribution
AC_ARG_WITH([distro],
	AC_HELP_STRING([--with-distro=DISTRO],[Compile for specific Linux distribution]),
	DISTRO=`echo $withval | tr A-Z a-z`,
	if test -n "`cat /proc/version | grep 'Red Hat'`"; then
		DISTRO=redhat;
	else
		DISTRO=`cat /etc/*release | grep ^ID= | sed 's/.*=//'`;
	fi
)
AC_MSG_CHECKING([for distro])
AC_MSG_RESULT([$DISTRO])
case $DISTRO in
	rhel | redhat | centos | fedora )
		# ok, supported distro
		# pkg-config does not check /usr/local/*/pkgconfig, fix it
		PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$expanded_libdir/pkgconfig"
		;;
	opensuse | suse )
		# ok, supported distros
		;;
	* )
		# unknown
		AC_MSG_WARN([Unsupported Linux distro \"$DISTRO\", only RHEL and SUSE are fully supported.])
		;;
esac

# check for roff2html from groff
AC_PATH_PROG([ROFF2HTML], [roff2html], [no])

AC_ARG_WITH([libxml2],
	[AC_HELP_STRING([--with-libxml2], [specific libxml2 location])],
	[
		AC_CHECK_PROG([XML2_CONFIG], [xml2-config], [yes], [no], [$withval])
		if test "$XML2_CONFIG" = "no"; then
			AC_MSG_ERROR([Missing development package of libxml2.])
		fi
		CFLAGS="`$withval/xml2-config --cflags` $CFLAGS"
		LDFLAGS="`$withval/xml2-config --libs` $LDFLAGS"
		WITH_LIBXML2="$withval"
		CONFIGURE_PARAMS="--with-libxml2=$withval $CONFIGURE_PARAMS"
	]
)

AC_ARG_ENABLE([notifications],
	AC_HELP_STRING([--disable-notifications], [Disable support of NETCONF Notifications (RFC 5277)]),
	[
	if test "$enableval" = "no"; then
		notif="no"
	else
		notif="yes"
	fi
	],
	# notifications are supported by default
	notif="yes"
)
if test "$notif" = "no"; then
	CONFIGURE_PARAMS="$CONFIGURE_PARAMS --disable-notifications"
	CPPFLAGS="$CPPFLAGS -DDISABLE_NOTIFICATIONS"
fi

AC_ARG_ENABLE([debug],
	AC_HELP_STRING([--enable-debug],[Compile with debug options]),
	CFLAGS="$CFLAGS -g -O0 -DDEBUG",
	CFLAGS="$CFLAGS -O3 -DNDEBUG"
	CONFIGURE_PARAMS="--enable-debug $CONFIGURE_PARAMS"
)

tls="no"
AC_ARG_ENABLE([tls],
	AC_HELP_STRING([--enable-tls], [Enable support for NETCONF over TLS.]),
	if test "$enableval" = "yes"; then
		tls="yes"
	fi
)

############################ Check for programs ################################

# Check for architecture, only x86 and x86_64 are supported
if test -z "$host_cpu";
then
	AC_CHECK_PROG([UNAME], [uname], [yes], [no])
	if test "$UNAME" = "no"; then
		AC_MSG_ERROR(["uname not found!"])
	fi
	build_cpu=`uname -m`
	host_cpu=$build_cpu
fi
AC_MSG_CHECKING([for host architecture])
case $host_cpu in
    i?86 )
	AC_MSG_RESULT($host_cpu is supported)
	;;
    x86_64 )
	AC_MSG_RESULT($host_cpu is supported)
        ;;
    * )
        AC_MSG_WARN([unsupported architecture $host_cpu])
        ;;
esac

# Check for c_rehash
if test "$tls" = "yes"; then
	AC_CHECK_PROG(C_REHASH, c_rehash, yes, no)
	if test "$C_REHASH" = "no"; then
		AC_MSG_ERROR(["c_rehash not found!"])
	fi
fi

# Check for rpmbuild
AC_CHECK_PROG(RPMBUILD, rpmbuild, rpmbuild, no)

# Check whether readlink supports the -f option
READLINK_FKNOWN=`$readlink -f xxx 1>/dev/null 2>&1 && echo yes`
if test "x${READLINK_FKNOWN}" != "xyes";
then
	# Try finding greadlink (e.g., Mac OS X)
	AC_CHECK_PROG(READLINK, greadlink, greadlink, readlink)
	if test "x${READLINK}" = "xreadlink";
	then
		AC_MSG_WARN([Try installing greadlink.])
	fi
else
	AC_SUBST(READLINK, [readlink])
fi

# Check for standard programs
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL

############################ Check for libraries ###############################
export PKG_CONFIG_PATH=/usr/local/${libdir##*/}/pkgconfig:$PKG_CONFIG_PATH

#AC_SEARCH_LIBS([login], [util], ,
#	[AC_MSG_ERROR([Could not find login() in expected locations. Install or/and add the comprising library into the list of tested libraries.])])

### libxml2 ###
if test -z "$WITH_LIBXML2" ; then
	AC_CHECK_PROG([XML2_CONFIG], [xml2-config], [yes], [no], [$WITH_LIBXML2 $PATH])
	if test "$XML2_CONFIG" = "no"; then
		AC_MSG_ERROR([Missing development package of libxml2.])
	fi
	CFLAGS="`xml2-config --cflags` $CFLAGS"
	LDFLAGS="`xml2-config --libs` $LDFLAGS"
fi

if test "$notif" = "yes"; then
	### pthread ###
	AX_PTHREAD([
		LIBS="$PTHREAD_LIBS $LIBS"
		CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
		CC="$PTHREAD_CC"],
		AC_MSG_ERROR([Missing POSIX threads support.])
	)
fi

# libnetconf
AC_ARG_WITH([libnetconf],
	AC_HELP_STRING([--with-libnetconf=PATH],[Set explicit installation prefix to the libnetconf library]),
	[CPPFLAGS="-I$withval/include/ $CPPFLAGS"
	LIBS="-L$withval/lib/ -Wl,-rpath,$withval/lib $LIBS"
	],[
	# get info from pkg-config about installed package
	PKG_CHECK_MODULES(LIBNETCONF, libnetconf)
	BUILDREQS="$BUILDREQS libnetconf-devel"]
)
REQS="$REQS libnetconf"
AC_SEARCH_LIBS([nc_callhome_listen], [netconf],
	[],
	[AC_MSG_WARN([libnetconf is compiled without libssh2, disabling callhome.]); CPPFLAGS="$CPPFLAGS -DDISABLE_CALLHOME"]
)
if test "$notif" = "yes"; then
	AC_SEARCH_LIBS([ncntf_dispatch_receive], [netconf],
		[],
		[CPPFLAGS="-DDISABLE_NOTIFICATIONS $CPPFLAGS"
		AC_MSG_WARN([libnetconf does not support NETCONF Notifications, disabling it.])]
	)
fi
if test "$tls" = "yes"; then
	AC_SEARCH_LIBS([nc_tls_init], [netconf],
		[CPPFLAGS="$CPPFLAGS -DENABLE_TLS"],
		[AC_MSG_WARN([libnetconf does not support TLS transport, disabling it.]); tls = "no"]
	)
fi
if test "$tls" = "yes"; then
	AC_SEARCH_LIBS([X509_free], [crypto],
		[],
		[AC_MSG_ERROR([libcrypto not found.])]
	)
fi
AC_SEARCH_LIBS([nc_init], [netconf], [], AC_MSG_ERROR([libnetconf not found.]))

#if test "$notif" = "yes"; then
#	AC_CHECK_LIB([netconf], [ncntf_dispatch_receive],
#		[],
#		[CPPFLAGS="-DDISABLE_NOTIFICATIONS $CPPFLAGS"
#		AC_CHECK_LIB([netconf], [nc_init], [], AC_MSG_ERROR([libnetconf not found.]))]
#	)
#else
#	AC_CHECK_LIB([netconf], [nc_init], [], AC_MSG_ERROR([libnetconf not found.]))
#fi

### libreadline ###
AC_CHECK_LIB([readline], [readline], [], AC_MSG_ERROR([Missing libreadline]))
AC_CHECK_HEADERS(readline/readline.h readline/history.h, [], AC_MSG_ERROR([Missing libreadline headers.]))
BUILDREQS="$BUILDREQS readline-devel"
REQS="$REQS readline"

### libxml2 ###
AC_CHECK_LIB([xml2], [xmlReadFile], [], AC_MSG_ERROR([MIssing libxml2]))
AC_CHECK_HEADERS(libxml/tree.h, [], AC_MSG_ERROR([Missing libxml2 headers.]))

###################### Check for configure parameters ##########################

######################### Checks for header files ##############################
AC_CHECK_HEADERS([fcntl.h stdlib.h string.h unistd.h], [], AC_MSG_ERROR([Missing system headers.]))

######## Checks for typedefs, structures, and compiler characteristics #########

######################## Checks for library functions ##########################
AC_FUNC_MALLOC
AC_FUNC_MMAP
AC_FUNC_REALLOC
AC_CHECK_FUNCS([mkdir munmap strdup strerror strndup strpbrk strtol])

############################### Set output #####################################
AC_SUBST(BUILDREQS)
AC_SUBST(REQS)
AC_SUBST(CONFIGURE_PARAMS)
AC_SUBST(ROFF2HTML)

AC_SUBST(RPMBUILD)
if test -z "$RPMBUILD"; then
	AC_MSG_WARN([Due to missing rpmbuild you will not able to generate RPM package.])
fi

AC_CONFIG_FILES(Makefile netopeer-cli.spec)

AC_OUTPUT
